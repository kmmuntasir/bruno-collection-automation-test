meta {
  name: Create Task Invalid Status
  type: http
  seq: 18
}

post {
  url: {{baseUrl}}/tasks
  body: json
  auth: bearer
}

headers {
  Content-Type: application/json
  Accept: application/json
}

auth:bearer {
  token: {{authToken}}
}

body:json {
  {
    "title": "Task with invalid status",
    "description": "Testing invalid status value",
    "status": "invalid-status"
  }
}

script:pre-request {
  // Ensure we have authentication token
  if (!bru.getEnvVar("authToken")) {
    throw new Error("Authentication token not found. Please login first.");
  }
  
  console.log("Testing task creation with invalid status");
}

script:post-response {
  console.log("Create task with invalid status:", res.status);
  console.log("Response time:", res.responseTime + "ms");
  
  if (res.status === 422) {
    console.log("✅ Invalid status properly rejected");
  } else {
    console.error("❌ Expected 422 but got:", res.status);
  }
}

tests {
  test("Should return 422 Unprocessable Entity", () => {
    expect(res.status).to.equal(422);
  });
  
  test("Should return error message about invalid status", () => {
    expect(res.body).to.have.property("error");
    expect(res.body.error).to.be.a("string");
    expect(res.body.error.toLowerCase()).to.contain("status");
  });
  
  test("Should not create task", () => {
    expect(res.body).to.not.have.property("id");
  });
  
  test("Response time should be reasonable", () => {
    expect(res.responseTime).to.be.below(1500);
  });
}

assert {
  res.status: eq 422
  res.body.error: isString
  res.responseTime: lt 1500
}
