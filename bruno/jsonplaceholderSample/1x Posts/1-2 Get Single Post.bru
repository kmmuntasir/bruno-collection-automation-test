meta {
  name: 1-2 Get Single Post
  type: http
  seq: 2
}

get {
  url: {{baseUrl}}/posts/1
  body: none
  auth: none
}

tests {
  test("Status should be 200", () => {
    expect(res.status).to.equal(200);
  });
  
  test("Post ID should match requested ID", () => {
    expect(res.body.id).to.equal(1);
  });
  
  test("Post should have all required properties", () => {
    expect(res.body).to.have.property("userId");
    expect(res.body).to.have.property("id");
    expect(res.body).to.have.property("title");
    expect(res.body).to.have.property("body");
  });
  
  test("Title and body should be non-empty strings", () => {
    expect(res.body.title).to.be.a("string");
    expect(res.body.title).to.have.length.above(0);
    expect(res.body.body).to.be.a("string");
    expect(res.body.body).to.have.length.above(0);
  });
  
  test("UserId should be a positive number", () => {
    expect(res.body.userId).to.be.a("number");
    expect(res.body.userId).to.be.above(0);
  });
}
