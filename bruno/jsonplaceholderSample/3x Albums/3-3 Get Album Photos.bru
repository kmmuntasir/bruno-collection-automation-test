meta {
  name: 3-3 Get Album Photos
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/albums/1/photos?_limit=3
  body: none
  auth: none
}

params:query {
  _limit: 3
}

tests {
  test("Status should be 200", () => {
    expect(res.status).to.equal(200);
  });
  
  test("Response should be an array", () => {
    expect(res.body).to.be.an("array");
  });
  
  test("All photos should belong to specified album", () => {
    res.body.forEach(photo => {
      expect(photo.albumId).to.equal(1);
    });
  });
  
  test("Each photo should have required properties", () => {
    if (res.body.length > 0) {
      expect(res.body[0]).to.have.property("albumId");
      expect(res.body[0]).to.have.property("id");
      expect(res.body[0]).to.have.property("title");
      expect(res.body[0]).to.have.property("url");
      expect(res.body[0]).to.have.property("thumbnailUrl");
    }
  });
  
  test("URLs should be valid format", () => {
    if (res.body.length > 0) {
      expect(res.body[0].url).to.match(/^https?:\/\/.+/);
      expect(res.body[0].thumbnailUrl).to.match(/^https?:\/\/.+/);
    }
  });
}
