meta {
  name: 2-3 Get Comments by Post ID
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/comments?postId=1
  body: none
  auth: none
}

params:query {
  postId: 1
}

tests {
  test("Status should be 200", () => {
    expect(res.status).to.equal(200);
  });
  
  test("Response should be an array", () => {
    expect(res.body).to.be.an("array");
  });
  
  test("All comments should belong to specified post", () => {
    res.body.forEach(comment => {
      expect(comment.postId).to.equal(1);
    });
  });
  
  test("Each comment should have required properties", () => {
    if (res.body.length > 0) {
      expect(res.body[0]).to.have.property("postId");
      expect(res.body[0]).to.have.property("id");
      expect(res.body[0]).to.have.property("name");
      expect(res.body[0]).to.have.property("email");
      expect(res.body[0]).to.have.property("body");
    }
  });
}
