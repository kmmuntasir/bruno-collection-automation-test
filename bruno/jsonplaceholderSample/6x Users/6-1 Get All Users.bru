meta {
  name: 6-1 Get All Users
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/users
  body: none
  auth: none
}

tests {
  test("Status should be 200", () => {
    expect(res.status).to.equal(200);
  });
  
  test("Response should be an array", () => {
    expect(res.body).to.be.an("array");
  });
  
  test("Should return exactly 10 users", () => {
    expect(res.body).to.have.length(10);
  });
  
  test("Each user should have required properties", () => {
    if (res.body.length > 0) {
      expect(res.body[0]).to.have.property("id");
      expect(res.body[0]).to.have.property("name");
      expect(res.body[0]).to.have.property("username");
      expect(res.body[0]).to.have.property("email");
      expect(res.body[0]).to.have.property("address");
      expect(res.body[0]).to.have.property("phone");
      expect(res.body[0]).to.have.property("website");
      expect(res.body[0]).to.have.property("company");
    }
  });
  
  test("Email should be valid format", () => {
    if (res.body.length > 0) {
      expect(res.body[0].email).to.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    }
  });
}
