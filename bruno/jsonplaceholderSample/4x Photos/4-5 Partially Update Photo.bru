meta {
  name: 4-5 Partially Update Photo
  type: http
  seq: 5
}

patch {
  url: {{baseUrl}}/photos/1
  body: json
  auth: none
}

body:json {
  {
    "title": "Patched Photo Title"
  }
}

tests {
  test("Status should be 200", () => {
    expect(res.status).to.equal(200);
  });
  
  test("Photo ID should match requested ID", () => {
    expect(res.body.id).to.equal(1);
  });
  
  test("Updated field should match request", () => {
    expect(res.body.title).to.equal("Patched Photo Title");
  });
  
  test("Other fields should remain unchanged", () => {
    expect(res.body).to.have.property("albumId");
    expect(res.body).to.have.property("url");
    expect(res.body).to.have.property("thumbnailUrl");
  });
  
  test("Response should have all required properties", () => {
    expect(res.body).to.have.property("albumId");
    expect(res.body).to.have.property("id");
    expect(res.body).to.have.property("title");
    expect(res.body).to.have.property("url");
    expect(res.body).to.have.property("thumbnailUrl");
  });
}
